<?php

namespace MGD\BasicBundle\Entity;

use Doctrine\ORM\EntityRepository;
use MGD\BasicBundle\Entity\Pedido;

/**
 * PedidoBots
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PedidoBotsRepository extends EntityRepository
{
    public function isCompletedByPedido(Pedido $pedido)
    {
        $result = $this->getEntityManager()
            ->createQuery('
            SELECT count(p.nombre)
            FROM MGDBasicBundle:PedidoBots p
            WHERE
                p.lvl < :lvl
                AND p.pedido = :pedido

            ')
            ->setParameters(array('lvl' => 10, 'pedido' => $pedido))
            ->getSingleScalarResult();

        return $result> 0 ? false: true;
    }

    public function isFirstLvlByPedido(Pedido $pedido)
    {
        $result = $this->getEntityManager()
            ->createQuery('
            SELECT count(p.nombre)
            FROM MGDBasicBundle:PedidoBots p
            WHERE
                p.lvl > :lvl
                AND p.pedido = :pedido

            ')
            ->setParameters(array('lvl' => 0, 'pedido' => $pedido))
            ->getSingleScalarResult();

        return $result == 1 ? true : false;
    }

    public function countMayorLvlByPedido(Pedido $pedido,$lvl =0)
    {
        return $this->getEntityManager()
            ->createQuery('
            SELECT count(p.nombre)
            FROM MGDBasicBundle:PedidoBots p
            WHERE
                p.lvl > :lvl
                AND p.pedido = :pedido

            ')
            ->setParameters(array('lvl' => $lvl, 'pedido' => $pedido))
            ->getSingleScalarResult();

    }

    public function updateAllLvlsByPedido($pedido_id, $lvl)
    {
        $result = $this->getEntityManager()
            ->createQuery('
            UPDATE MGDBasicBundle:PedidoBots p
            SET p.lvl = :lvl
            WHERE
               p.pedido = :pedido
            ')
            ->setParameters(array('lvl' => $lvl, 'pedido' => $pedido_id))
            ->execute();

        $finished=0;
        $progress=0;

        if ($lvl==10)
        {
            $finished=1;
            $progress=1;
        }

        $this->getEntityManager()
            ->createQuery('
            UPDATE MGDBasicBundle:EXT\EXTRefseu p
            SET p.progress = :progress, p.finished = :finished
            WHERE
               p.rEFID = :pedido
            ')
            ->setParameters(array('progress' => $progress, 'finished' => $finished, 'pedido' => $pedido_id))
            ->execute();

        return $result;
    }

    /**
     * @param $limit
     * @return PedidoBots[]
     */
    public function getByPendientes($limit)
    {
        return $this->getEntityManager()
            ->createQuery('
            SELECT p
            FROM MGDBasicBundle:PedidoBots p
            join p.pedido pedido
            WHERE
                p.maquina is null
                AND p.lvl < 10
            order by pedido.fecha, p.creadoDate
            ')
            ->setMaxResults($limit)
            ->getResult();

    }
}
